
@page "/rbac/role2"
@namespace Wings.Examples.UseCase.Client.Pages
@inject HttpClient HttpClient
@inject ModalService _modalService
@inject IMapper mapper

<DataSourceManager TModel="RoleListView" @ref="DataSource"> </DataSourceManager>
<AntTableView TModel="RoleListView" @ref="table">
    <ToolbarTemplate> <Button OnClick="()=>createForm.ShowModal(new RoleListView())" Type="primary"> 新增</Button> </ToolbarTemplate>
    <ActionColumnTemplate>
        <Space>
            <SpaceItem>
                <Space>

                    <SpaceItem>
                        <Button Size="small" OnClick="()=>updateForm.ShowModal(mapper.Map<RoleListView,RoleListView>(context))"> 编辑  </Button>
                    </SpaceItem>
                    <SpaceItem>
                        <Button Size="small" Danger OnClick="async ()=> { SelectedData = context; OpenDeleteConfirmModal();}"> 删除 </Button>
                    </SpaceItem>
                </Space>
            </SpaceItem>
        </Space>
    </ActionColumnTemplate>

</AntTableView>

<AntDynamicForm mode="modal" TModel="RoleListView" @ref="createForm" OnSubmit="async () =>{await createForm.InsertAsync();await table.Load(); }"></AntDynamicForm>
<AntDynamicForm mode="modal" TModel="RoleListView" @ref="updateForm" OnSubmit="async () =>{await updateForm.UpdateAsync();await table.Load(); }"></AntDynamicForm>

@code {
    public AntTableView<RoleListView> table { get; set; }
    public RoleListView SelectedData { get; set; }
    AntDynamicForm<RoleListView> createForm;
    AntDynamicForm<RoleListView> updateForm;
    public DataSourceManager<RoleListView> DataSource { get; set; }
    public void OpenDeleteConfirmModal()
    {
        _modalService.Confirm(new ConfirmOptions()
        {
            Title = "确定删除该条记录 ? ",
            OnOk = async (e) =>
            {
                await DataSource.Delete(SelectedData);
                await table.Load();
            },
            OnCancel =async (e) =>await Task.FromResult<object>(null)
        });
    }

}

